[user]
	name = Jim Fitzpatrick
	email = fitzpatrick.jim@gmail.com
[color]
	ui = auto
[alias]
	a = "!git ls-files -m --exclude-standard | fzf --print0 -m | xargs -0 -t -o git add"
	aa = add --all
	ae = add --edit
	ai = add --interactive
	amend = commit --amend -C HEAD
	ap = add --patch
	au = add --update
	authors = "!git log --pretty=format:%aN | sort | uniq -c | sort -rn"
	bb = "!r() { cur=$(git rev-parse --abbrev-ref HEAD); git for-each-ref --sort=-committerdate refs/heads/ --format='%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | sed \"s/m${cur}|/m* ${cur}|/\" | column -ts'|'; }; r"
	br = branch
	branchname = symbolic-ref --short HEAD
	ca = commit --amend
	ci = commit
	cis = commit -m '' --signoff
	changes = diff --name-status -r
	cm = commit --message
	co = checkout
	cob = checkout -b
	com = checkout master
	cpc = cherry-pick
	d = diff
	dc = diff --cached
        #done = "!git push origin `git branchname`; sleep 1; git browse newpull"
	done = "!git push origin `git branchname` && open $GITLAB_HOST"
	div = divergence
	ds = diff --staged
	forcepull = "!git fetch; git reset --hard @{u}"
	h = help
	irb = rebase --interactive
	l = log --abbrev-commit --date=relative --all --pretty='format:%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'
	lasttag = describe --tags --abbrev=0
	lg = log --graph --pretty=format:'%Cred%h%Creset %an -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
	ls-ignored = ls-files --exclude-standard --ignored --others
	ls-untracked = ls-files --other --exclude-standard
	m = merge
	mb = merge --no-commit --no-ff @{-1}
	mm = merge master
	msg = log --format=%B -n1
	p = cherry-pick -s
	pom = push origin master
	pick = cherry-pick
	pul = pull
	prune-remotes = "!for remote in `git remote`; do git remote prune $remote; done"
	r = remote
	ra = !git log --graph --abbrev-commit --date=relative -20 --all --pretty='format:%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbs = rebase --skip
	rbm = rebase master
	repush = "!git push origin `git branchname`"
	rh = reset --hard
	rmb = !sh -c 'git branch -D $1 && git push origin :$1' -
	ru = remote update --prune
	s = status --short --branch
	sl = shortlog
	sm = submodule
	sma = submodule add
	smu = submodule update --init
	st = status
	stashgrep = "!stashgrep() { IFS=$'\n'; for i in `git stash list --format='%gd'`; do git stash show -p $i | grep -H --label=\"$i\" \"$1\"; done; }; stashgrep"
	tagchanges = "!git log `git lasttag`... --date=relative --pretty='format:%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --no-merges"
	tagchanges-jira = "!git log `git lasttag`... | grep -Eo '[a-zA-Z]+-[0-9]+' | tr /a-z/ /A-Z/ | sort | uniq | sed -e \"s#^#$JIRA_HOST/browse/#\""
	tidy = !git remote prune origin && git branch -r --merged master | grep origin | grep -v 'master$' | grep -v -i feature | sed 's%origin/%%' | xargs -I% git push origin :% && git branch --merged master | grep -v 'master$' | grep -v -i feature | xargs git branch -d
	tidymain = !git remote prune origin && git branch -r --merged main | grep -v 'main$' | grep origin | grep -v -i feature | sed 's%origin/%%' | xargs -I% git push origin :% && git branch --merged main | grep -v 'main$' | grep -v -i feature | xargs git branch -d
	tidy-dryrun = !git remote prune --dry-run origin && git branch -r --merged master | grep -v 'master$' | grep -v -i feature | sed 's%origin/%%' | xargs -I% echo [remote] % && git branch --merged master | grep -v 'master$' | grep -v -i feature | xargs -I% echo [local] %
	undo = reset --soft HEAD^
	unstage = reset HEAD --
	unwip = "!git reset --soft HEAD^; git unstage; git checkout -"
	wd = diff --color-words
	wds = diff --color-words --staged
	wip = "!git checkout -b `git branchname`-wip; git add -A; git commit -a -m wip; git push origin `git branchname` -f; gh"
	push = push --tags
	showtrackedignored = ls-files -i --exclude-standard
[core]
	excludesfile = ~/.cvsignore
	pager = less -FX
	whitespace = trailing-space,space-before-tab
[diff]
	mnemonicprefix = true
	tool = vimdiff
[difftool]
	prompt = false
[merge]
	tool = gvimdiff
[push]
	default = simple
[pull]
	rebase = false
